// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	oauth2 "golang-bootcamp-1/internal/oauth/repository"
	"golang-bootcamp-1/internal/oauth/transport/http"
	oauth3 "golang-bootcamp-1/internal/oauth/usecase"
	"golang-bootcamp-1/internal/register/transport/http"
	register2 "golang-bootcamp-1/internal/register/usecase"
	"golang-bootcamp-1/internal/user/usecase"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeRegisterHandler(db *gorm.DB, userUc usecase.IUserUseCase) *register.RegisterHandler {
	iRegisterUsecase := register2.NewRegisterUseCase(userUc)
	registerHandler := register.NewRegisterHandler(iRegisterUsecase)
	return registerHandler
}

func InitializeOauthHandler(db *gorm.DB, userUc usecase.IUserUseCase) *oauth.OauthHandler {
	iOauthClientRepo := oauth2.NewOauthClientRepo(db)
	iOauthAccessTokenRepo := oauth2.NewOauthAcces(db)
	iOauthRefreshTokenRepo := oauth2.NewOauthRefreshTokenRepo(db)
	iOauthUseCase := oauth3.NewOauthUseCase(iOauthClientRepo, iOauthAccessTokenRepo, iOauthRefreshTokenRepo, userUc)
	oauthHandler := oauth.NewOauthHandler(iOauthUseCase)
	return oauthHandler
}
